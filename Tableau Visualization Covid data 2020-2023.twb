<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Hoja1 (Table1)' inline='true' name='federated.1xupwvp0as0ez312e2xhk16pn2f2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table1' name='excel-direct.0fjc9pk0qvl8ab13o5a9z1kxgmn8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emanuel/Desktop/DATA ANALYST_SCIENTIST/PROJECTS/2_Tableau 2 de 4/Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0fjc9pk0qvl8ab13o5a9z1kxgmn8' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0fjc9pk0qvl8ab13o5a9z1kxgmn8' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_CEE2CB3A5FB64E71AC02355D4A575466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_CEE2CB3A5FB64E71AC02355D4A575466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_CEE2CB3A5FB64E71AC02355D4A575466]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Hoja1' datatype='table' name='[__tableau_internal_object_id__].[Hoja1_CEE2CB3A5FB64E71AC02355D4A575466]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Hoja1' id='Hoja1_CEE2CB3A5FB64E71AC02355D4A575466'>
            <properties context=''>
              <relation connection='excel-direct.0fjc9pk0qvl8ab13o5a9z1kxgmn8' name='Hoja1' table='[Hoja1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Hoja1 (Table2)' inline='true' name='federated.1p8e4ls02qlymc1anrb1006d7fmq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table2' name='excel-direct.0vskm6t00n9lx915w86re1f75rtk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emanuel/Desktop/DATA ANALYST_SCIENTIST/PROJECTS/2_Tableau 2 de 4/Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0vskm6t00n9lx915w86re1f75rtk' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:B254:no:A1:B254:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Total death count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0vskm6t00n9lx915w86re1f75rtk' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:B254:no:A1:B254:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Total death count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B254:no:A1:B254:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_9B21DCEF8C4B4DEE98159E604B61C700]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total death count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total death count]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Total death count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_9B21DCEF8C4B4DEE98159E604B61C700]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Hoja1' datatype='table' name='[__tableau_internal_object_id__].[Hoja1_9B21DCEF8C4B4DEE98159E604B61C700]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Hoja1' id='Hoja1_9B21DCEF8C4B4DEE98159E604B61C700'>
            <properties context=''>
              <relation connection='excel-direct.0vskm6t00n9lx915w86re1f75rtk' name='Hoja1' table='[Hoja1$]' type='table'>
                <columns gridOrigin='A1:B254:no:A1:B254:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Total death count' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Hoja1 (Table3)' inline='true' name='federated.0hhoffr1kuolfm1bt6ios0ol0y3j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table3' name='excel-direct.15rbopq0shkksf1cllcb00hd3l78'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emanuel/Desktop/DATA ANALYST_SCIENTIST/PROJECTS/2_Tableau 2 de 4/Table3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15rbopq0shkksf1cllcb00hd3l78' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='Highest Infection count' ordinal='2' />
            <column datatype='real' name='Percent Population infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15rbopq0shkksf1cllcb00hd3l78' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='Highest Infection count' ordinal='2' />
            <column datatype='real' name='Percent Population infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_197722DBFAD94D6AAB20A8FD7C12550A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_197722DBFAD94D6AAB20A8FD7C12550A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Highest Infection count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Highest Infection count]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Highest Infection count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_197722DBFAD94D6AAB20A8FD7C12550A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percent Population infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percent Population infected]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Percent Population infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_197722DBFAD94D6AAB20A8FD7C12550A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Hoja1' datatype='table' name='[__tableau_internal_object_id__].[Hoja1_197722DBFAD94D6AAB20A8FD7C12550A]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Hoja1' id='Hoja1_197722DBFAD94D6AAB20A8FD7C12550A'>
            <properties context=''>
              <relation connection='excel-direct.15rbopq0shkksf1cllcb00hd3l78' name='Hoja1' table='[Hoja1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='Highest Infection count' ordinal='2' />
                  <column datatype='real' name='Percent Population infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Hoja1 (Table4)' inline='true' name='federated.0cu05qr1us4pym17o2t1y0lrpt28' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table4' name='excel-direct.1q3lfm50hl07rh1emzv061s9p9by'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emanuel/Desktop/DATA ANALYST_SCIENTIST/PROJECTS/2_Tableau 2 de 4/Table4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1q3lfm50hl07rh1emzv061s9p9by' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='string' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1q3lfm50hl07rh1emzv061s9p9by' name='Hoja1' table='[Hoja1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='string' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_DCE6FDB2CBD8498E9A881A4A63645821]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_DCE6FDB2CBD8498E9A881A4A63645821]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RCO_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_DCE6FDB2CBD8498E9A881A4A63645821]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_DCE6FDB2CBD8498E9A881A4A63645821]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Hoja1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Hoja1_DCE6FDB2CBD8498E9A881A4A63645821]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Hoja1' datatype='table' name='[__tableau_internal_object_id__].[Hoja1_DCE6FDB2CBD8498E9A881A4A63645821]' role='measure' type='quantitative' />
      <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Colombia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Hoja1' id='Hoja1_DCE6FDB2CBD8498E9A881A4A63645821'>
            <properties context=''>
              <relation connection='excel-direct.1q3lfm50hl07rh1emzv061s9p9by' name='Hoja1' table='[Hoja1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='string' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_9898EDEE3B58474297CE4277BD93B1E0]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 4' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Sheet 4' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2_42FA74558E044D3F9AB5CAD230834E09]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hoja1 (Table1)' name='federated.1xupwvp0as0ez312e2xhk16pn2f2' />
          </datasources>
          <datasource-dependencies datasource='federated.1xupwvp0as0ez312e2xhk16pn2f2'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xupwvp0as0ez312e2xhk16pn2f2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xupwvp0as0ez312e2xhk16pn2f2].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xupwvp0as0ez312e2xhk16pn2f2].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1xupwvp0as0ez312e2xhk16pn2f2].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xupwvp0as0ez312e2xhk16pn2f2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1xupwvp0as0ez312e2xhk16pn2f2].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1xupwvp0as0ez312e2xhk16pn2f2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xupwvp0as0ez312e2xhk16pn2f2].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{C72B5230-0092-48CC-92E3-842CB8D4E2F0}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total deaths per continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hoja1 (Table2)' name='federated.1p8e4ls02qlymc1anrb1006d7fmq' />
          </datasources>
          <datasource-dependencies datasource='federated.1p8e4ls02qlymc1anrb1006d7fmq'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Total death count]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total death count]' derivation='Sum' name='[sum:Total death count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Location:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:Location:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;Oceania&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:Location:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Timor&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;North Korea&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Vatican&quot;</bucket>
              <bucket>&quot;England&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
              <bucket>&quot;Northern Ireland&quot;</bucket>
              <bucket>&quot;Scotland&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Wales&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1p8e4ls02qlymc1anrb1006d7fmq].[sum:Total death count:qk]</rows>
        <cols>[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]</cols>
      </table>
      <simple-id uuid='{41C8A879-5E7D-422B-B361-00A5E5A18C0C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent population infected per country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hoja1 (Table3)' name='federated.0hhoffr1kuolfm1bt6ios0ol0y3j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0hhoffr1kuolfm1bt6ios0ol0y3j'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Percent Population infected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percent Population infected]' derivation='Sum' name='[sum:Percent Population infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[Longitude (generated)]' field-type='quantitative' max='26090092.680011559' min='-23385235.735734724' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[Latitude (generated)]' field-type='quantitative' max='19178813.943715662' min='-9758826.0326198693' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[sum:Percent Population infected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[sum:Percent Population infected:qk]' value='Percent Population infected per country'>
              <formatted-text>
                <run>Percent Population infected per country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[sum:Percent Population infected:qk]' />
              <text column='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[none:Location:nk]' />
              <geometry column='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='6' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[Latitude (generated)]</rows>
        <cols>[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8CB64297-97D0-4991-AB3C-C6510F90704E}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent population infected per continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Hoja1 (Table4)' name='federated.0cu05qr1us4pym17o2t1y0lrpt28' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu05qr1us4pym17o2t1y0lrpt28'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Asia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Oceania&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;South America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cu05qr1us4pym17o2t1y0lrpt28].[sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{0B6AC15B-F07D-4A67-BCEF-B31BE050CAE0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='89421' x='483' y='929'>
            <zone h='98142' id='5' type-v2='layout-basic' w='20803' x='483' y='929'>
              <zone h='76074' id='3' name='Sheet 2' w='14197' x='483' y='22997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22068' id='9' name='Sheet 1' w='20803' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='76074' id='8' name='Sheet 2' pane-specification-id='0' param='[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]' type-v2='color' w='6606' x='14680' y='22997'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='1137' h='98142' id='17' is-fixed='true' type-v2='layout-basic' w='68618' x='21286' y='929'>
              <zone h='57259' id='6' param='vert' type-v2='layout-flow' w='68618' x='21286' y='929'>
                <zone fixed-size='476' h='56214' id='10' is-fixed='true' name='Sheet 3' w='68618' x='21286' y='929'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='40883' id='18' param='vert' type-v2='layout-flow' w='68618' x='21286' y='58188'>
                <zone h='40883' id='12' name='Sheet 4' w='68618' x='21286' y='58188'>
                  <layout-cache cell-count-w='1315' minheight='290' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='44135' id='16' is-fixed='true' type-v2='layout-basic' w='9613' x='89904' y='54936'>
            <zone h='44135' id='15' param='vert' type-v2='layout-flow' w='9613' x='89904' y='54936'>
              <zone fixed-size='685' h='44135' id='13' is-fixed='true' name='Sheet 4' pane-specification-id='0' param='[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]' type-v2='color' w='9613' x='89904' y='54936'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='422' h='54007' id='11' is-fixed='true' name='Sheet 3' pane-specification-id='1' param='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[sum:Percent Population infected:qk]' type-v2='color' w='9613' x='89904' y='929'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='23' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='169' h='22068' id='9' is-fixed='true' name='Sheet 1' w='20803' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='56214' id='10' is-fixed='true' name='Sheet 3' w='68618' x='21286' y='929'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='422' h='54007' id='11' name='Sheet 3' pane-specification-id='1' param='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[sum:Percent Population infected:qk]' type-v2='color' w='9613' x='89904' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76074' id='3' is-fixed='true' name='Sheet 2' w='14197' x='483' y='22997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='76074' id='8' name='Sheet 2' pane-specification-id='0' param='[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]' type-v2='color' w='6606' x='14680' y='22997'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40883' id='12' is-fixed='true' name='Sheet 4' w='68618' x='21286' y='58188'>
                  <layout-cache cell-count-w='1315' minheight='290' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='685' h='44135' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]' type-v2='color' w='9613' x='89904' y='54936'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D3EE22A9-4243-4C2A-8F70-08AD5748C052}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9E979D0E-5AA0-417F-A2D5-84D617A13B28}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E1D3C1E-2C3E-4E80-870A-AADEDBC7581E}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[sum:Percent Population infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hhoffr1kuolfm1bt6ios0ol0y3j].[none:Location:nk]</field>
            <field>[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D4E2BA1C-E899-49F3-8519-E6668EFAAE38}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94897C32-55FC-48DA-8D76-B8DBD866D9EF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1p8e4ls02qlymc1anrb1006d7fmq].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0cu05qr1us4pym17o2t1y0lrpt28].[none:Location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F12E3FAA-584C-43DA-82B7-75E7E5554E78}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      wtIq75KM/wEjbNurxGbpHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='67' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAR9klEQVR4nO3daXAb93nH8e/uYgGQBO8TJCXrpCjJEqnb1mVLlWsrPhK7tsczrp2kSTzN
      qzbv2rd90xfpTDvTZjKdpJ00dmNPJnFSS7ITU6clmTqsm5QskaJIkeJ9gQRIHIvdvgB1WaIJ
      0wuQ5j6fGc1ogcX//yyIHxcgdp9VLMuyEMKBFEVR1JkuQoiZJAEQjiYBEI4mARCOJgGYhcYG
      u2nvG/kaI4RpbGyxrZ65TAIwC3U3HqPuXOtXe5AZ4w+/+hntI5AIwPUUVDb3uGa6APHlosFe
      3vmfd1HcOu7K9Ty7Oot3fneI3LxynnrpMY69v5/+wS6ef2EXn9SfoiNewcuvbuHK1UuMD1Tx
      9nt7cLsVfIu38qjrCnsaTMpc3Vj+bbz5/IaZ3rwZJ3uAWa6nsR5zwXa+/6O3uHnqTxz95BCr
      n36VN777EgW40DNdZGcohEsXUlu9mGdf+g7+bA+GEaf57FEKap7mjTe/x80THxO04lRWreX5
      57Yx0N4105s2K0gAZrnM/EKC/V2Mj/QQ1fMpLy6gu7OXaDBI2+VP6c1YxlNbanFpKpqmEI5E
      uP3VZnZ+PkO9PYRHe4l6cnHP7KbMShKAWSivcgnmrXP85je/J165gZ1Vbv74UT2vf/9Nare9
      QFnsOh8cOEnx8scpCl2jeSSDHD2Dp577NhcPfURvyGLLlg3Mr93F2qIQew6d47U3X6escgXV
      jxTg8ZWxrnbxTG/mrKDIoRDCqWbdoRCGYcx0CcJhZlUAZGck0m1WBUCIdJMACEeTAAhHkwAI
      R5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEebtWeEWZaJFQ7YNp6ieVDcmbaNJ+aG2RuA
      UD+hX+y0bTy99nW8O/7RtvHE3CBvgYSjSQCEo0kAhKNJAISjSQCEo0kAhKPZFwDToL25kUMH
      D3Cm4Tpxy+RW8yUOHjzMje4hYIxPPjxIwEic9zvS2czH9edtm16I6bAvAHEDMgvZ9uQO9OHr
      dPf1crXXZNvWjXReucRYPALmGE3X+wGLppu9xMYGbJteiOmw74sw3cu88jIGO64xoBZTGR2l
      uLwM3Z1BSb5KMAyewkVEh1qxYjpRLQ+vGgYS7VAsy8I0TaLRKABWLGZbacB9Ywtxm30BsEza
      rp7jVjib7Y/XEu5pJjJmYFkQi5moKiiKixKPQWNTJ0UVftqvdQOgaRqQCILLlSjJ0nXsfLmq
      qoqu6zaOKOYC2wJgjPVzqWWQ6up82ts78Jf6CV4+zTVziN5wFlVeAIXSynLqjl9i1+5q2ice
      qyjKnXFu/z8VHYLunUcIsDEAijuXmhWLiZkkmrNqPh7ftIauvhE2bqrApVisWOklK9PFE9tz
      8XlU1q1ZZ9f0QkyLbQHQdA/zFiz6wuh5LMjKu7Poy05MV1iQuC03N9eu6YWYFvkeQDiaBEA4
      mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoE
      QDiaBEA4mgRAOJoEQDiavQGwTHq6eohPLAYHe7jW1MxwKALE6LjRTmyi3UNsLEBbZ5+t0wvx
      VdnYGjFK47nT1O0/TgQwRrupP9+M2wVnT5wgZAS58MkRmnoTzbCaL1+m/txZ26YXYjrsa4yl
      6CxbvZ7R4fGJZdDcGRQVFdLe1omiQOHilQRar2KVVBOI6RRlJhpVWdbdLkD3/t9uqRxbfDPZ
      GAAFl0u7u6x5ySLEufMNqFm5qIDqysLDAH1dt/AWVzLWcRmAeDzxpsk0TWK3WyIahm2lPTC2
      EBNSdpG8UH8XMZ+fLasWcPb4QYbHKwCFCn8Opy61sWHzFgY7Joq43Q7Rsu60LzSjLiI21qOq
      Km6328YRxVxg22eAeCTIyWOH6A+NcvzwUaLZ8yjVhjl85CiZFSspzsqkpDSXvJL5+EuLyfO5
      qSivsGt6IaZFsWbRG+NYLHZ3DxDslcukipRSFEWR7wGEo0kAhKPN2ivFp9Vn/wmRgD1j+cqg
      5k17xhIpJwEAiIUgGrRprHF7xhFpIW+BhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISj
      SQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKPZFwDLovtGI2+//T7jE8stDSf5uG4/
      9Wc/J06A3//yHbrGE+fgd13+jF/vOWDb9EJMh31nhJkxFJ+fJRV9WIAR6qIt4GHtmsV4s3LQ
      CFG+aB6tn9/AX7uAtkCMsizbZv9GCIwPEzbCto1X4itFURTbxnMi+wKguSktLuDGxOJ4IEBg
      ZICODpP+/hE2bl+NmlGGEu4lHMxAySzFFWkFwDAMLMsiHo/faV9o2dzFzTRNotHoQ+/TLQu7
      XkamZWJMMs+vTv6CkzeP2zQT/Ner76Kp2tQrikml7Jxgb2YmOYXl1NQsp6WhnpGQgaKo+HM1
      zl7pYt6iKpqGWhNFuO6WcbcznM7DX0bT86Wd4Wz8Laoqk8+jqvZ+5HK73RKAr8n2znCfX2/m
      yOGjBLQSCo0uPt7/MTcDHopz3WguleLy+fR191CYl4VLk3Pyxcyy7RWoeXxs2rqDTVt33Lmt
      aPNOau5ZZ936PAC+/cJuALZv227X9EJMi/wZVDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDia
      BEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mo0B
      sIiFg5w9fe6+diZdzRdpaOkGxjlx8FOC8UTfn1BvK0c+a7RveiGmwb4AxKM0X23m5s1OjImb
      YsEeGlv7CPT1AWEio31cvTEEWFxr6WJkuMu26YWYDhs7w3lYXlNLYGA4sWzGuHjpOjVrVtDU
      3A+At3gJ0f4WrEeqCKs+MrVxgDsd4UzTJDbREc4yjIdOM133jv1FLhs7w1mWhTHJPJZl2jRL
      QsyIYSr2juk0KetM1XfjIpdbu+gf6qW9O8LCZQUoqk6BHqCptYv88nLGm/uARMe02wHQtESn
      M0uzt+OZqqp3xk4phUnnsbuPp6ZpaIp0hvs6bAuAFTcYHh5iNDhKf/8ApY+s4Y3F64iEejnT
      0IM/L5N2xvBX+jlQf5mdzyyhsznxWEVR7vy73T7QTEHT10lbE9o4l4KCMmkLRHu3SVVU29st
      Oo19ATAN+nq7KXlkPkPdPeRl5eBxqeieXKqrvEAGS5fp+LLdPLYpi2yvxupHV9s1vRDTYlsA
      VN1L1fJVD97u8lCQ7wEgPz/R+NbvLwGgqKjIrumFmBbpTjsHReJhLCxbxlJRcWseW8aajSQA
      c9DbTT8nEB2yZaySDD9vLP2xLWPNRvIJSjiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDha0gE4
      ceL29W3jnDp5KkXlCJFeSX0RduHYh/xhz0FaWtrACNFr+tm4KdWlCZF6SQWgfNEK1q0LUFOz
      FndGNuX+0lTXJURaJBWA4vIFrF3SxqkzZwDIrazm2e1rU1qYEOmQ9LFAJy80UrvxCQA82YUp
      K0iIdEo6AFmaysBIEI8Kcd2XypqESJukA1BYlEtr8zUA8uZprK56JGVFCZEuSQcgMNBLd3cU
      4mN0xfJ5/skUViVEmiQdgOfe+DueAzDD7P3ocMoKEiKdkg7Ab3/+T1zoiIAZZ9763amsSYi0
      SToAL7/1D2y5dQtDzaSivOThK1kmw8Mj5OTnoQKRsVEGh0fJyi0kJ8tFf88Q+SVFaArEIyEG
      QgYlBbk2bYoQX13Sh0Ic2/ce+/Z/woF9v+X/Dl18cAUzxrVLZ/ngg/2EASKjXGi4wuDQIGdO
      1BM0Rji2dx/NAxEArjdc4M/H6m3aDCGmJ+k9wM0Rkx/9zfdQrHHe+d8PgJr7V1BU5letZrA/
      mFh2Z7F+wwYwo4z092NZUFa1ksEbTVBYxWDERVm228ZNEeKrSzoAK0o8/PRf/wO3EWLp9hcf
      XEHR8Hrv6VKmqEQC3Xx6qoHl67fg08OoejZ6fJDBvk7cRZVonZ8DYBgGlmXdaZEIYE3SXnC6
      TNMkGo0+9D7dxtaIpmViTDKPadrbxjAajaKpD3aGu/0c2sEyrUmft7kg6QBk+lfwt9uWosfG
      aL4VnHJ9KzrCqfOtbN6xkwyXCoQBlYoyH6cv3mTNxk0Md04U4bpbhq4negeZUR07n3ZVVXG7
      J9nj2NgZTlUmn8fuLm5ut/uhAbCzBaOiKpM/b3NA0j+Rsw0Xyc7IJCPbR+P50w/cH48EOXns
      EN3Dgxw7fJSu3kHGxgY5fvggRz49zVjMTUGhj/yS+eRmZ5Hn81BSPMmHaSHSJOk9wOKcOP/8
      L/+O1xhh0dYH3wJpHh+btu6477byygX3LS9ZmgXAY5vWAfDoyke/ar1C2CrpAGz61nep2RnC
      xE1GxtzdJQpnSb4znKLgzZCD4MTcknQA6ve9zcHzNwEortrEW6/sSllRQqRL0gG4Nabx9z/5
      CQqgaNJSVMwNU76Sw4Ee6g4c4vrVFn4f/wA3kFuxjN3b1qShPCFSa8oAuDxZLK1eyYKlK+/c
      5smRvv5ibpjyewCX10f1ilV0d3ewatUqVq1aQXuTXN5UzA1JvZk/+ef3+GDvUa5da0G1IijF
      a/mLVFcmRBokFYCVjz3FX3lKWL58Jbonk7xc+XOomBuSCoAvt5ClZTns2/NHYnEoWLCaV55+
      PNW1CZFySR8LdPD4afwFGpu2bUVDrk0r5oakA7B0aTVLqpZz4fRZFC2eypqESJukv9FatriC
      AycusfuFZxkemrvHhwtnSXoPUHfgCO74IOOKj4ZzciqjmBuSDoCmQjRmcOX0QToCciiEmBuS
      DsC3nv0WnowigiGL1175y1TWJETaTPmrfGygnXd/+zuGQnE0TQMsPjyQyfe+80QayhMitaYM
      gDe3lBdf/Wv27tvL7t3PgRXm6KdX0lGbECk3ZQBUl5uCwmIyY8OcvdpGgdlNx5C93Q2EmClJ
      fwZ44bXv4osNE4jn8forzzx8Jcukp6uH298ShIODNDe3EIoYQIyOG+3EJjp2xMYCtHX2fb3q
      hfiakg6AO6uALTt2sWvHVgp9Dzkn2IzSeO40dfuPEwGs2Cj1py6iEOX0yfMYVpALnxyhqTcM
      QPPly9SfO2vXdggxLVOfEDPcxZ4P/0Qwcve2/Ece5Ts7N9y/oqKzbPV6RofHARgb6CZnXhWL
      FvuJDB1lOAyFi1cSaL2KVVJNIKZTlJnoAXRvIyc7mzp90aRjW9jWGMvCghRuw31zWVZKn6/E
      JKn9mcy0qU+I8fpYuWoN0XuOfvDmFj+4oqLgct09RsiMg65rKArouoppgurKwsMAfV238BZX
      MtZxGYB4PDG4aZrEbneEM4yvsVkPum/sL9CxsZOaZWFMMo9lc2c4wzAwlQfHtLUzHNakz9tc
      kEQAslmxqpaelgaOnLpALA5585ZTvbDiSx+XmZdD3/lOYuU+eoZMKr0AChX+HE5damPD5i0M
      dkzMMdEZzrKsezrDuYg8fOhpmQ2d4RSbO8Ppup76znCKdIYDoO7gYXRzmIVVSwmOPngs0O3O
      cP2hUY4fPsqQmcuKcg9Hj3/G/JU1ZGgeSkpzySuZj7+0mDyfm4ryLw+REKmW9DEN3rxiFhSq
      dI7FGeq7CTx23/0P6wxH9gr8C+8uLliYCcCa2kRHuGVVy6ZXtRA2SXoPsG51DUvX7yQzPMi6
      DXKZeDE3JBUAIxbl9Pkz6G4fm7dt5vMLDzbHFeKbKKm3QMf2/pq6unqam9twe7NYv+OFVNcl
      RFokFYAnX/whyx97BiyIq15KSuRK8WJuSPpDcNOZQ1zsjKIZQUqW7+TFHatSWZcQaZF0AFqH
      4/z4rR/cc40wCYD45ks6ANWFLn76bz/DYwRZuPnbqaxJiLSZMgBGeJRRw8X6Z15n1Y5xTHS8
      Xj0dtQmRclP+GXS083POXO0ARcHjzSTDq9t24JgQMy2pt0CH3v9vPqu7e0X34qqN/OClnSkr
      Soh0mTIAiqqy6+Uf8mTtonTUI0RaTRkAn7+adcWarUcYCjFbJHWBjBxPOkoRIv3sPUBdiG8Y
      CYBwNAmAcDQJgHA0CYBwNAmAcDQJgHC0lAXAioU4duBj6ur+zOH6SxhWgPd/+Q5d44meNV2X
      P+PXew+kanohkvL/5cHoqjtZySUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
